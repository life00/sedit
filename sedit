#!/bin/sh

# setting environment variables
user="user"
EDITOR="${EDITOR:-/bin/vi}"

# error checking
if [ -n "${2}" ]; then
	printf "Expected only one argument\n"
	exit 1
elif [ -z "${1}" ]; then
	printf "No file path provided\n"
	exit 1
elif [ "$(id -u)" -ne 0 ]; then
	printf "Should be run as root\n"
	exit 1
fi

# exit if any code errors
# error when using unset variables
set -eu

# temporary directory
tmpdir="$(mktemp -d)"

# remove temporary directory when script exits
trap "rm -rf '${tmpdir}'" EXIT

# copy file and set appropriate permissions
cp -a "${1}" "${tmpdir}"/edit
chown "${user}":"${user}" "${tmpdir}"
chown "${user}":"${user}" "${tmpdir}"/edit
chmod 700 "${tmpdir}"
chmod 600 "${tmpdir}"/edit

# open file in ${EDITOR} as ${user} using su
su "${user}" -P -s /bin/sh -c '"${1}" "${2}"' sedit "${EDITOR}" "${tmpdir}"/edit

# reverse permission changes
chown "root:root" "${tmpdir}"
chown "root:root" "${tmpdir}"/edit
chmod 700 "${tmpdir}"
chmod 600 "${tmpdir}"/edit

# checking for changes
# the original file is not copied to temporary directory because I believe it is unnecessary
# it is not expected that something overwrites the original file during editing
# if something does then it will be visible in the diff
if cmp -s "${tmpdir}"/edit "${1}"; then
	printf "Skipping write; no changes.\n"
	exit 0
else
	# provide a diff of changes
	printf "Changes made:\n"
	# suppress error code response of diff
	diff --color "${1}" "${tmpdir}"/edit || true
	# confirming changes
	printf "Continue? [y/N]: "
	read -r resp
	printf "\n"
	if [ "${resp}" = "y" ] || [ "${resp}" = "Y" ]; then
		# overwrite the original file
		cat "${tmpdir}"/edit >"${1}"
		exit 0
	else
		exit 1
	fi
fi
